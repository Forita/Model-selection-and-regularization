{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import scipy.io\n",
    "mat_dict = scipy.io.loadmat('StevensonV2.mat')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['__header__', '__version__', '__globals__', 'Publication', 'timeBase', 'spikes', 'time', 'handVel', 'handPos', 'target', 'startBins', 'targets', 'startBinned'])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mat_dict.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "X0 = mat_dict['spikes'].T\n",
    "y0 = mat_dict['handVel'][0,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "num nt=15536  num nneuron=196\n"
     ]
    }
   ],
   "source": [
    "nt, nneuron = X0.shape\n",
    "print(\"num nt={0:d}  num nneuron={1:d}\".format(nt,nneuron))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15536,)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ti=mat_dict['time'].T\n",
    "t0=np.reshape(ti,15536)\n",
    "t0.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The sampling time = 0.050000\n",
      "The total recording time = 776.750000\n"
     ]
    }
   ],
   "source": [
    "tsamp=t0[np.array([1])]-t0[np.array([0])]\n",
    "ttal=t0[np.array([nt-1])]-t0[np.array([0])]\n",
    "print(\"The sampling time = %f\" % tsamp)\n",
    "print(\"The total recording time = %f\" % ttal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Number of samples for training and test\n",
    "ntr = nt // 2\n",
    "nts = nt - ntr\n",
    "\n",
    "# Training and test\n",
    "xtr = X0[:ntr,:]\n",
    "ytr = y0[:ntr]\n",
    "xts = X0[nts:,:]\n",
    "yts = y0[nts:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Normalized RSS of the train sample = 0.468805\n"
     ]
    }
   ],
   "source": [
    "from sklearn import linear_model\n",
    "\n",
    "regr = linear_model.LinearRegression()\n",
    "regr.fit(xtr,ytr)\n",
    "y_tr_pred = regr.predict(xtr)\n",
    "\n",
    "RSS_tr = np.mean((y_tr_pred-ytr)**2)/(np.std(ytr)**2)\n",
    "print(\"Normalized RSS of the train sample = {0:f}\".format(RSS_tr))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Normalized RSS of the test sample = 1889379842913849311232.000000\n"
     ]
    }
   ],
   "source": [
    "y_te_pred = regr.predict(xts)\n",
    "\n",
    "RSS_ts = np.mean((y_te_pred-yts)**2)/(np.std(yts)**2)\n",
    "print(\"Normalized RSS of the test sample = {0:f}\".format(RSS_ts))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7768,)\n"
     ]
    }
   ],
   "source": [
    "xm = np.mean(xtr, axis = 0)\n",
    "ym = np.mean(ytr)\n",
    "x1 = xtr-xm[None, :]\n",
    "y1 = ytr -ym\n",
    "print(y1.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Container object of 3 artists>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1183f5390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import r2_score\n",
    "\n",
    "regr = linear_model.LinearRegression()\n",
    "k=np.arange(0,nneuron,1)\n",
    "rsq = np.zeros(196)\n",
    "\n",
    "for i in range (0, 195):\n",
    "    x2 = X0[:,i]\n",
    "    regr = regr.fit(x2[:,None],y0)\n",
    "    y_pred = regr.predict(x2[:,None])\n",
    "    rsq[i] = r2_score(y0, y_pred)\n",
    "\n",
    "plt.stem(k,rsq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The neurons with the ten highest R^2 values =  [192  58 152 153 136  67 120  98 193  80]\n"
     ]
    }
   ],
   "source": [
    "d = 100\n",
    "Isel = (-rsq).argsort()[:d]\n",
    "print(\"The neurons with the ten highest R^2 values = \",Isel[:10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Normalized RSS of the train sample = 0.481172\n",
      "Normalized RSS of the test sample = 0.497800\n"
     ]
    }
   ],
   "source": [
    "xnew = X0[:,Isel]\n",
    "\n",
    "xtr = xnew[:ntr]\n",
    "ytr = y0[:ntr]\n",
    "xts = xnew[ntr:]\n",
    "yts = y0[ntr:]\n",
    "\n",
    "regr = linear_model.LinearRegression()\n",
    "regr.fit(xtr,ytr)\n",
    "\n",
    "y_tr_pred = regr.predict(xtr)\n",
    "y_te_pred = regr.predict(xts)\n",
    "RSS_tr = np.mean((y_tr_pred-ytr)**2)/(np.std(ytr)**2)\n",
    "RSS_ts = np.mean((y_te_pred-yts)**2)/(np.std(yts)**2)\n",
    "print(\"Normalized RSS of the train sample = {0:f}\".format(RSS_tr))\n",
    "print(\"Normalized RSS of the test sample = {0:f}\".format(RSS_ts))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAY4AAAEKCAYAAAAFJbKyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xl4k1X2wPHvaUmhrAXBAhUFlQHBKkhVHFyKiqDzUxB1\ncN8FVFwRRXFBRcXBZVxQBpfRGRdwrQgqIlgdURSwICIgKG4VQYUChUK3+/vjTdokzfamSd40PZ/n\n6UNy8ya5F0pO7nauGGNQSimlIpXmdAWUUko1LBo4lFJK2aKBQymllC0aOJRSStmigUMppZQtGjiU\nUkrZooFDKaWULRo4lFJK2aKBQymllC1NnK5APLRv39507drV9vN27NhBixYtYl8hh6Viu1KxTZCa\n7UrFNkHqtWvp0qV/GGM6RHKto4FDRIYAjwDpwNPGmMl+jw8F7gaqgUrgWmPMJ+Fet2vXrixZssR2\nfQoLC8nPz7f9vGSXiu1KxTZBarYrFdsEqdcuEfkx0msdCxwikg5MBQYBvwCLRWSWMeYbr8vmA7OM\nMUZEDgJeAXomvrZKKaU8nJzjOAxYZ4z53hhTDswAhnpfYIwpNbVZGFsAmpFRKaUc5mTgyAF+9rr/\ni7vMh4icKiKrgTnAxQmqm1JKqSDEqbTqInI6MMQYc6n7/nnA4caYMUGuPxq43RhzfJDHRwIjAbKz\ns/vNmDHDdp1KS0tp2bKl7eclu1RsVyq2CVKzXanYJki9dg0cOHCpMSYvkmudnBwvBrp43d/LXRaQ\nMeZjEdlXRNobY/4I8Ph0YDpAXl6eiWbSKtUmuzxSsV2p2CZIzXalYpsgddsVCSeHqhYD3UWkm4hk\nAGcCs7wvEJH9RUTctw8BmgJ/JrymSimlajjW4zDGVIrIGGAu1nLcZ40xK0VktPvxacBpwPkiUgGU\nASOMHlmolFKOcnQfhzHmHeAdv7JpXrfvB+5PdL2UUkoFpylHlFJK2aKBQymllC0pmatKKdWwFBQV\nM2XuGn4tKaNzVibjBvdgWN8627pUOJs3Q7t2cX8b7XEopSJWUFTMgMkL6DZ+DgMmL6CgKOgKeluv\nefMbKyguKcMAxSVl3PzGipi8dqNRWgo33AD77APr1sX97TRwKKUiEq8P+Clz11BWUeVTVlZRxZS5\na+r1uo3GW29Br17w4INWALniCojz4lMNHEqpiMTrA/7XkjJb5crtp59g2DDr52ev7E0VFbB9e1zf\nWgOHUioi8fqA75yVaau80auogAcegAMOsHobHu3bw/PPw4IF0Lp1XKuggUMpFZF4fcCPG9yDTFe6\nT1mmK51xg3vU63VT0qJFkJcH48bBzp215ZdeCmvWwPnng5VsI640cCilIhKvD/hhfXO4b3guOVmZ\nCJCTlcl9w3N1VZW3LVtg9Gj461/hq69qyw88ED75BJ56KiGrqTx0Oa5SKiKeD/J4LJsd1jdHA0Ug\nxsBLL8H118OmTbXlmZkwcSJcdx24XAmvlgYOpVTE9AM+gdautVZIffCBb/nf/gaPPw5duzpSLdDA\noZRKMo1+M+Du3TB5Mtx3n3XbIycHHn0UTj01IfMYoWjgUEolDc9eEc+yX89eEaBxBI8FC+Dyy+Hb\nb2vL0tLgqqvg7ruhVSvn6uZFA4dSKmYC9RaybDw/1F6RlA4cmzbB2LHwwgu+5Xl58K9/wSGHOFOv\nIHRVlVIqJoLtLC8pq4j4NRrdZsDqapg+HXr08A0arVtb8xiLFiVd0ADtcSilYiRYb2Hj1sgDR+es\nTIoDBImU3Az41VfWEtvPPvMtHzECHnoIOnd2pl4R0B6HUiomgvUKyquqI36NRrEZcMcOuPFGqyfh\nHTT23RfefRdmzEjqoAHa41BKxUiw3kJGeuTfT+O5VyQpvP02jBlj5ZnycLmsQDJhgrU/owHQwKGU\niolxg3v4rIgCq7eQ3SbD1uuk5F6Rn3+Ga66BN9/0LT/6aJg2zco71YDoUJVSKiaCpQ7Jykz8zuak\nUVkJDz9spT33Dhp77AHPPQeFhQ0uaID2OJRSUQq2Uc+/t1BYuNahGjrsiy9g1ChYtsy3/OKL4R//\nsIJHA6WBQyllW6PfqBdKSQnccos1BOV9oFKvXlbZUUc5V7cY0aEqpZRtempfAMZYK6IOOACefLI2\naDRrBvfeC0VFKRE0QHscSqkoNLqNeuGsW2clJJw3z7f8xBOtjXz77utMveLE0R6HiAwRkTUisk5E\nxgd4/BwR+UpEVojIpyJysBP1VEr5CrYhL6u5/YnwgqJiBkxeQLfxcxgweUG9zzBPqN27rRxSBx7o\nGzQ6d4ZXX4U5c1IuaICDgUNE0oGpwIlAL+AsEenld9l64BhjTC5wNzA9sbVUquGK5wfyuME9cKXX\nzdBauqvS1vsES1PSEIJH1rJlcPDBcPvttVlsPQkJV62C0093PIttvDjZ4zgMWGeM+d4YUw7MAIZ6\nX2CM+dQYs8V9dxGwV4LrqFSDFO8P5GF9c2iRUXeku6La2JrnaJBzJb//DhdcQJ/rrrOOa/Xo1w8+\n/9xKfR7nM7+d5uQcRw7ws9f9X4DDQ1x/CfBuXGukVAMUaFlsIrLMbg2SvLC4pIwBkxfU1ufgqoDX\nQQObK6muhmeftXZ5b9lSW96qFdxzjzXHkZ4e/PkpRIz3crFEvrHI6cAQY8yl7vvnAYcbY8YEuHYg\n8ARwpDHmzyCvNxIYCZCdnd1vxowZtutUWlpKy5YtbT8v2aViu1KxTWC/XSVlFRRvKaPa6/9xmojP\nfX+5OW3qVUePNb9tjygPVcdMcGU2D7gRMNhrZKSn0aNjcpw9AdBi/Xr+8tBDtPn6a5/yTcccw7or\nr6S8QweHahY7AwcOXGqMyYvkWid7HMVAF6/7e7nLfIjIQcDTwInBggaAMWY67jmQvLw8k5+fb7tC\nhYWFRPO8ZJeK7UrFNoH9dg2YvIDikrrfctNFqAoQPHKyMrnqnMCv791zaZPporyyip0V1od62+Yu\n7ji5t09vpcRvLweAAP7vOja3khnfprNwfN33DfQama507hueS34y7AfZscOa/H7wQWsXuEfXrnw1\nahQHjR/Pns7VzjFOznEsBrqLSDcRyQDOBGZ5XyAiewNvAOcZY74N8BpKNWrBhnSqjLGVZdZ/TqSk\nrKImaABs2VnBuNeW+8yRBEoxEqyfE6yewdKUJMUmwjlzoHdvuP/+2qDRpAncfDOsXMnm/v2drZ+D\nHOtxGGMqRWQMMBdIB541xqwUkdHux6cBtwN7AE+ItTqhMtKulFKNQbCMtDlecx2RZJkNNCfir6LK\n1Jkj8U8xYvWA7J2nkXRJDX/5xUpI+MYbvuVHHWVt7Ovd25l6JRFHNwAaY94B3vErm+Z1+1Lg0kTX\nS6mGIlhG2mB5o4KJdDI63HWB6pMm0jDO06ishKlT4dZbobS0trxdO5gyBS680Fpuq3TnuFINWazO\nrwjWcwl0nd365LStSq4eRSCLF1un8X35pW/5hRdaQaN9e0eqlaw0cCiVpIJln/UXqmcR6WsE6in4\nc6VH1nPwr09hYWHY5zhm61brAKUnnvBNSOjJN3XMMc7VLYlpv0upJBSLDXx2XmNY3xxO65dDsH3O\nbZu7mHL6wcnfc4iUMfDKK1aAmDrVNyHhpElWKnQNGkFp4FAqyRQUFTP2leX13lFtd1f2h6t/D7gq\nKicrk6LbT0idoPHdd3DSSTBiBGzYUFs+eDB8/bXVA8mwd2phY6OBQ6kkUlJWwc1vrAi4BwPs7ai2\nuyu7Qe3ijkZ5ubXD+8AD4b33ass7doSZM+Hdd2G//ZyrXwOigUOpJLJx666Q8wzhJqcjuTZW5Q3K\nRx9Bnz7Wiqldu6wyERgzBlavhr//PWUTEsaDBg6lkkioFB6hNvAFMm5wD1ubAO1e7y1pU6P/8Qdc\ndBHk51sZaz369rUSEj72GLSJTQqWxkRXVSmVRDLSA3+XSxexvaPa7lLdaJf2JuUxstXV8NxzMG4c\nbN5cW96ypTX5feWV1i5wFRX9m1MqiWS3aUamqypg7qZoPoTt7sqOZhd3IjLx2rJyJVx+Ofzvf77l\np50GjzwCOSkyye8gHapSKolkZbpilrspUcNHSTOpvnMn3HKLNZfhHTT22Qdmz4bXXtOgESPa41Aq\nycQid9OtBSt4cdFPNctr4zl8FGzXeUIn1d991xp+Wr++tqxJExg7Fm67DVq0SFxdGgHtcSiVYgqK\nin2Chkd9TtYL1Xupz6R6vf36K5xxhrUvwztoDBhgpQ+ZPFmDRhxo4FAqxUyZu8Z2evNQAu1Av27m\nMm4tqO3BJDw1elWVtSKqZ09rCMqjbVt46in4+GPIzY3f+zdyOlSlVIoJFRyiGT4KNPltgBcX/UTe\nPu1qhtYSNhG+dCmMGmX96e388+GBByAFTuNLdho4lEoiJWUVvud1u5fDhkpW6P9Ym0wXJQHOAxcI\neZDTnW+vZMvO2ud5Tv0LFogMJHbl1LZt1ga+qVOt5bYePXpYCQkHDkxMPZQGDqWSRUFRMcVbymqO\ngvVMaC/5cTOvLy0OuE8CYNxry6moMjWPpacJrjShorp2wEqAc/rvHTDYtMl0sX13JVXVvgNcnlP/\nggUiSNDKKWOs4ahrrvHNLdW0qRVIxo2zbquE0cChVJKYMncNZ3bx/fAuq6ji5c9/rpO7yjPRvbO8\nsiZoeFRVG5plpLNn84ygPRTvDXvBggJYp/6JBD5LHBKwcmr9emu11Lvv+pYPGmSlQt9///i+vwpI\nA4dSSeLXkjLoUrc8VMLDYJPgO8qrWHnXsXXKPZl3g71mICU7Kzin/951VmrFdeVUeTk8+CDcfTeU\nefVqsrPhn/+0MttqbinH6KoqpZJEsG/v6UE+IO1+2y8oKmbcq/aChud9Jg3L5eERfRKzcup//7Ny\nSd1yS23QEIErrrASEp55pgYNh2mPQ6kkMW5wD4pX+a4UynSlc1q/HJ85Dk/5uME9mDhrZcChpqxM\nV52yibNW+sx7ROrXkjJuLVjBpGFxXmL7559w443w7LO+5X36wLRpcPjh8XtvZYv2OJRKEsP65pDT\nNrPOt/pJw3K5b3iuTzBo5rL+6048pTeuNN9v3640YeIpveu8fqi5jFAM8MKin2r2bcScMVZCwh49\nfINGixbw0EPWeeAaNJKK9jiUSiJZmS4Wjs8P+NjuytolqFt2Wgc+3Tc8l8O6tWXhd7UZYOM1ivPy\n5z8zaVjwTXWRnm/uY9UqGD3a2rDn7dRTrYSEXQJM+ijHaeBQqgEIloH2lje+YmeF7xke5VWG619Z\nBvjmpWrb3OWzT8OuKmMoKCoOuK9kYM8OQZcMZ1E3qNx0zN6cMuc5+Mc/oMKrTnvvDY8/DiefHHU9\nVfxp4FAqSRQUFbPxt+1cNH5OnW/swfZL+AcNj2rjuzmvoKgYm3PiAQXbVxIqN9a4g6u4eX7t8t/9\nvvyEPvc/CSW/1V6cng7XXw933KG5pRoADRxKJVigIR2wPpSv6FmNIa1ONttgGWhD8QQb/30bgbjS\noGWz8D2SYPtKQuXG2ri1mrKKNDqUbub2+U9x8mq/czKOOMKa/D7ooLBtUsnB0clxERkiImtEZJ2I\njA/weE8R+UxEdovIDU7UUalYCpQw8OY3VjBx1sqghyFB4Ay04aSJ0G38HMa+sjxk0ACoqLb2a7TI\nCP8edpbzpolQUVHBeV/OZv5To32CxtamLeBf/4JPPtGg0cA41uMQkXRgKjAI+AVYLCKzjDHfeF22\nGbgaGOZAFZWKuWBzFcE+2D29DM+Qk38+qVA8H/CRftAbrI2D0Qq0u7znhrWc8cpUsr9f61P+Ru+B\nPDPsSuaMPC3q91POcbLHcRiwzhjzvTGmHJgBDPW+wBizyRizGIh+Rk+pJGI3t5NAzdkXw/rm0Dwj\nOUaX/RduudKFTFftx0mL3Tu5bf5TzPrP9T5B4/u2nTl7xCQmnHojl53WP0G1VbEmJhYzZtG8scjp\nwBBjzKXu++cBhxtjxgS4diJQaox5IMTrjQRGAmRnZ/ebMWOG7TqVlpbSsmVL289LdqnYrobapjW/\nbae8qu6EdpM0obLakJ0JG/1iS0Z6Gj06tgJgRfHWoK8tCCbobEPsZaSnUV5VTZM0oaoa672NYb/F\nn3H0f5+h5ZY/a66tdLkoGnoGi08aRnpmM7LbNAu4SbEhaai/g8EMHDhwqTEmL5Jrk+PrSwwYY6YD\n0wHy8vJMfn6+7dcoLCwkmuclu1RsV7K3KdiehpIAE9We3eEvLPqJsbmVPLjC97+lAOsn5wMwYfIC\n25Pk0RKsOYpAQ105WZksHG/lwhrgrtNeWzdy57xpHPfdYp9rf+59EDcMGcvMB87n0ERUPEGS/Xcw\nnpwMHMX4pnTby12mVIPmv4op0HnfgfZABOPJSVVQVMzO8so4196S4w52gVKa+Cc33PTndkYvLuCa\nhS+TWbm7pvz35lncfdyldP/7AM7qnUohQzkZOBYD3UWkG1bAOBM428H6KBUTwSbAPfsq/INHoOWt\n3jbv2E2PW9/12TleXy0y0kNOhHuOh/Wvledwp5qNhQsX8t5/r2O/jet9rnuxzxDuP+ZCtjVryY3p\nVYk77EklhGOBwxhTKSJjgLlAOvCsMWaliIx2Pz5NRDoCS4DWQLWIXAv0MsZsc6reSoUTbAI82L6K\ncKueyoJs8qsPV3oaEHoFVaBabSur5LqZy3hoxmdc+8EzDP/yPfbzenxVh65MGHwlX+YcAFi9k85Z\nGTGrt0oOjs5xGGPeAd7xK5vmdfs3rCEspRqMYJv1PENOgXokiZSV6WJrlAkPq6qrGb5yARMWPMMe\nZbXf33a6mvLQkefw77yhVKVZe0E8w11ZW9cGeznVQGl2XKViLNBmPe95gYQctxpEpiudiaf0pk0U\nK5r2+/NnXp5xCw/NedgnaMzb/3COv/RJnj5suE/QWDj+WB2iSlEps6pKqWQRaALcO+9UNOlDYqVp\nkzSunbnM3nMqdnPFole5fNFrZFTXTs4Xt+rAxEGjmNe97n6M4pIyBkxewK8lZYzvU02JOzmiSg0a\nOJSKA+9JcH/jBvcImzsqXuyeyXHk+iImvf8EXUs21JRVShrP5g3ln0eezc6MwKcQCrW73surquus\nKlMNmwYOpRLMv0eSVc905/HQoXQLty54mqGrPvIpL+rUg1uGXMmqPfcN+txAqUe8V5Wphk8Dh1JR\nsnNwUaBrPRvoALqOn5OoaoeUVl3F2cvncuNHz9N6946a8m1NW/D92Fu5qkUexdt2k5XpQsRKjNjG\n63aoYTgn53ZUbGngUCoKkWzyi/TagqJi0oPs0E6kXhu/5965j9Nnw7c+5QW9juGxv13O/HtG8EkE\nrzMgyO52z6oy1fBp4FAqCuE2+UVy7cRZK21lu42X5uVlXP+/F7ho6dukm9o9I+vbduLWE65kYdc+\nAHS7eQ7G1C6ztTOH47/bXDVsGjiUikK4TX6RXGt3ojrmjOGEtYuY+MG/6Lz9j5ri3elNmHb4GTxx\nxBnsbpLhfTkQunflXeYZmstIT+O+4bk6v5FCNHAoFYVgY/me/RHecxrBEgU6KWfrJiZ+MI1B677w\nKV+4z0HcNugKvt8j9L7bcJPd3qvKCgsLydegkVI0cCgVhXGDezDu1eVUVPsGhB3lldxasMLnTO5k\nChpNqiq5eMlbXLvwJZpX1CYk/KN5GyYdeykFvfJB/E/bCEwnuxsvDRxKRWFY35yA8xMVVSZs0kKn\nHFK8invmTuWA33/wKX/p4MHcf8yFbM1sZev1otl9rlJDyMAhIteHetwY81Bsq6NUw1ESZFI72YJG\n612ljC98jrOXv+dTvqpDVyaccCVf7nVAVK9bUlZB37vexxjYWlYRdkmySh3hehyeryA9gEOBWe77\nJwNfBHyGUo1EsHmOZFhaC4AxDPumkFsXPE37nbUnB+50NeWfA87m2byhVKbXb9DBu8cVbtJcpY6Q\nvzXGmDsBRORj4BBjzHb3/YlAcuxYUsohwZadHrJ3GxZ+t9nBmkG3zcVMen8qA378yqf8g/0O5Y5B\nl1PcZs+4vK/uEG8cIv26kQ2Ue90vd5cp1WgFS2Y4Ze4ax+rUtLKcyxe9yuWLXqVpVW1Cwg0t92Di\noFHM7X5ExJPf3gKlEQlGJ81TX6SB4z/AFyLypvv+MOD5+FRJqYbBe8ltVnMXO3ZXBjw1L1EG/LCM\nu99/gn23/FpTViVp/LvfyTx85DnsaNo8qtf1nIn+4erfI8rqqzvEU19EgcMYc4+IvAsc5S66yBhT\nFL9qKZXc/NOIOLn7u/2OLUxY8AynflPoU76s01+YMPhKVmbvF/iJETqtXw6ThuUC4XNq6Q7xxsHO\nzFhzYJsx5t8i0kFEuhlj1od9llIpyOlT/ADEVHPW8rncVPgcbbwTEmY05x/HXMBLfYZQnZYe4hUi\n8/rSYvL2acewvjnkhEhiGC4ViUodEQUOEbkDyMNaXfVvwAW8AAyIX9WUckYkWW+dHsc/YNP33DN3\nKof86jufMuuAo7n72Ev5vWW7mL2XJ6/WsL45QRcEaEqRxiXSHsepQF/gSwBjzK8iYm+3kFINQKBM\nttfOXFbn1Dynltw2Ly/j2k9e4uIlb9HEKyHhD1mduO2Ey/lft0Pi8r4lZRXcWrCiZsgq0nTyKjVF\nGjjKjTFGRAyAiLSIY52UckykQ1BOBI3j137OnfOmkbP995qy8rQmTDv8NKYe8Xd2u5rG9f1fWPQT\nAJOGae+isYs0cLwiIv8CskTkMuBi4On4VUup2ItkCMqps8BD6bxtExM/mM4Jaxf5lC/qciATBl/J\nd3t0SVhdXlz0U818h2q8Il1V9YCIDAK2Yc1z3G6MmRfXmikVQ4GGoK5zD0F5JnXB3n6FeEuvruKi\nJW9x3Scv0aJiV035n5mtuefYS3ij97FR7cmoDwNcO3MZU+au0SGqRizSyfH7jTE3AfMClCmVtDy9\njEA9CU+A8KTKaOZKS5qg0bd4Nfe8P5Vem3wXLr580Ancn38hJZmtHaqZRdOLNG5pEV43KEDZifV9\ncxEZIiJrRGSdiIwP8LiIyKPux78SkfjM/KmU5OllRDL8VFZR5fhJfAAZO0qZNHcqr78wzidorGm/\nN6efcz83n3i140HDo6yiirGvLKfb+DkMmLyAgqJip6ukEiRcdtzLgSuA/UTEO+lNK+DT+ryxiKQD\nU7GC0i/AYhGZZYz5xuuyE4Hu7p/DgSfdfypVh/8cxo7dlY7vtYiYMZyy6iPOnfY0LbaW1BSXNWnK\nIwPO4plDh1KRnnxpzD2LBLQH0riEG6p6CXgXuA/w7hFsN8bUN4vbYcA6Y8z3ACIyAxgKeAeOocB/\njDEGWCQiWSLSyRizoZ7vrVJMoDmMhqLr5mLufv9JjvrRd8nvgn3zuH3QaH7J6uhQzezRBIeNh5gI\nlhWKSH9gpVd23NbAAcaYz6N+Y5HTgSHGmEvd988DDjfGjPG6ZjYw2Rjzifv+fOAmY8ySAK83EhgJ\nkJ2d3W/GjBm261RaWkrLli2jaU5SS8V2+bdpzW/bKa+qDvGM5JNWUUG/2W+QN+s1mlTUDpOVtm3H\nx+ddyneHRpeQ0Gm5OW187qfi7x+kXrsGDhy41BiTF8m1kS7HfRLwnl8oDVDmKGPMdGA6QF5ensnP\nz7f9GoWFhUTzvGSXiu3yb9NF4+dgIp6yc94RPy5n0vtPsN/m2nmBKkljxQknce4B51PatDl87WAF\no5STlclV5+T7lKXi7x+kbrsiEWngEOPVNTHGVItIfY+dLQa8F6Dv5S6ze41SQQ9VShOoTpalUsAe\nO0qY8OEzDF/5oU/58o7dmTD4SgYP6krpioZ5orMmOGw8Iv2K9r2IXC0iLvfPNcD39XzvxUB3Eekm\nIhnAmdSeMOgxCzjfvbqqP7BV5zdUIOMG9yDT5ZvQz5UuNG2SHL0QMdWcuew95j892idobM/I5Pbj\nR3HqeQ/wdcf9HaxhdNJFEKyehuarajwi/WozGngUuBVr+ft83PMJ0TLGVIrIGGAukA48a4xZKSKj\n3Y9PA94BTgLWATuBi+rznip1Deubw5IfN/Py5z9TZQwCVFQZKqqc7270+P0H7pk7lbziVT7ls3se\nxV3HXsqmVns4VLP6caUJU844WINFIxTpzvFNWD2CmDLGvIMVHLzLpnndNsCVsX5flXoKiop5fWlx\nzfJQ58MFZJbv4pqFL3Hp4gKfhIQ/ZnXk9kGX89G+/RysXf2IoEGjEQu3j+NGY8w/ROQxAvxfNMZc\nHbeaKWVDMpyP4e3YdV9w17xp7LVtU01ZeVoT/nX4aTyegISE/kTgr/u248uftsbm78nofo3GLFyP\nw9O3rrP8Valk4vT5GB4dt/3BxPn/Ysi3n/mUf97lQCaccAXr2u/tSL3W3/c3IHQKFjv0eNjGLWTg\nMMa87f5TzxdXSS3YqqpESa+u4sKlb3PdJy/Ssry2HpszW3Nf/kW8mnu8Y3sy0kXoNn5OTUbgheOP\nZcDkBVH/fenqKRVuqOptQgwXG2NOiXmNlIpCoJPpEuXgX9dw79yp9N7ku9BwZu4gJudfyJbmbYI8\nMzECpQWx8/eV6UqjXYumenCTqhFuqOoB95/DgY5Yx8UCnAVsjFellLLL80HmyVWV1dyFMdbJdfHS\navcOxn30H84tegfvvLpr9+jChMFX8kWXA+P23tHypAVZOP5YwPckv2A9kF0V1TXXKwXhh6o+AhCR\nB/22or8tIjrvoRLKO4nh+D7VlBQV+3zzHdY3p+a+59q4BA5jOHnVx9y24Gn23LGlpnhXkwwe/euZ\nPHXYqUmZkNDDMx/k/fcFBB2+0vkM5S/SfRwtRGRfr4SE3QA9PlYljH8Sw/Kq6qDZWP2v9ZeeJlRF\nuZ18ny2/cvf7T3L0D0U+5YXd+nHbCZfzcwNISBgsEAQavtL5DBVIpIHjOqBQRL7HOiRtH2BU3Gql\nlJ9Ay22DZWMNtTQ3XYSzDuvCi4t+srXXI6OygpFfvM5Vn86kaVVtL2Zjy3bcedxI3ukxoMEkJBzY\ns0PAcv/hPp3PUMFEugHwPRHpDvR0F602xuyOX7WU8hVsuW2g8lBLc6uM4fWlxbTJdEU8jNX/p6+Y\nNPcJ9t9DGvPLAAAe8UlEQVT8S01ZNcLz/f6PB486z0pI2IB8uPr3oI/5D18pFUikR8c2B64H9jHG\nXCYi3UWkhzFmdnyrp5Ql2ORtoGGXcEtzyyqq2F0ZfjVRu51bueXDZzn96/k+5Suy9+OWwWNY0al7\nBDVPPsmy50U1XJFmgPs3UA4c4b5fDEyKS42UCiBQEsNg4++BrvUXaopDTDV/X/4+858a7RM0tmdk\nMvG4kQw9/6EGGzRAJ7tV/UU6x7GfMWaEiJwFYIzZKdJABnRVSvAff89ITwuajdX7Wrub3Lr//iP3\nvD+Vw375xqd8To8B3HXcZWxs1T7KFiRe0yZpVFcbKryipE52q1iINHCUi0gm7s2AIrIfoHMcKqG8\nx98LCwvJDzEW77k23Aorj2YVu7j60xlc9sWbuKprr/25TTa3DRpN4X6HxqYRCSDAOf33ZtKw3Drn\nsOtkt4qFSAPHHcB7QBcReREYAFwYr0opFa2ComImzlrpM/Gd6UqjbXMXJTsrSBOp2UntMfC7xdw1\nbxpdttbuaa1IS2f6YcN57K8j2OVqlrD6RyvTlR6wB6aT3SoewgYO95DUaqzd4/2xvtBcY4z5I851\nU8qWgqJixr263GdoBqCsoprKKsPDI/oA1PRAsrf/wR0fTOekbz/1uf6LvXox4YQrWdthn4TVvb70\nECWVSGEDhzHGiMg7xphcYE4C6qRUDTtDLVPmrqkTNDwqqg3XzlxGTlYmp/fpyB7PPcWl7//bJyHh\nlmatuHfgRbyWezxGkuPkwEjkZGXW2TGvQ1MqniIdqvpSRA41xiyOa22U8uI/P+GdpC8rwPWRLDNt\nt+orRjzyOAf+9p1P+WsHHse9Ay9ms8MJCf250gUMQQMi1G7oC/X3pcFDxVKkgeNw4FwR+QHYgTVc\nZYwxB8WrYkqF2i1+T/+6PYJQ+zda7d7B2I//y/lfzvFJSLiu3V7cOvgKFu2dfL/K6SJMOf1gIPQK\nMc+GPju765Wqj0gDx+C41kKpAIL1IIpLylhRXMklN79DlTHkuIdkxg3uUXeOwxj+tvoTbl/wFNml\nm2uKdzXJ4LEjRvDUYcMpb5KcCQnPOrxLzQf+sL45dBs/J2CaFM/fk53d9UrVR8iBXBFpJiLXAuOA\nIUCxMeZHz09CaqgarXAb1QKdMzHljIPJyrQCQZeS33ju1YlMnXW/T9D4uGtfTrh4KlP/OiJpgwbA\nzMU/U1BUXHM/2N+Hpzzc40rFSrgZwOeBPGAFcCLwYNxrpJRbJDvAPbyHZJbdnM8PrZfzwTNXkL9+\nac01m1q0ZcwpN3L+3+/ip7ad4lXtmKmoMtz59sqa++F2z9vZXa9UfYQbqurlXk2FiDwDfBH/Kill\n8d8tHi6bbXFJGf97+nUOvvdmWq9fS1N3eTXCfw85iQeOPp/tTZPnNICcrEwG9uzA60uLg25Q3LKz\ndj9KuOy14R7XFVcqVsIFjprfWmNMpWYZaVyS4YPGewNb37ve9/kg9dZ251ZuLvw3R634wKd85Z77\ncsvgK1neObm+dWdlumpO1cvbpx3XzlwW0fPCbegL9riuuFKxFC5wHCwi29y3Bch03/esqmod19op\nxyTbB01BUTGluyrrPmAMZ6z4gJsL/027sm01xaUZmTx05Lk83+//qEqLbLgrkbaW+fYk/He7e3jm\na+pLV1ypWAo5x2GMSTfGtHb/tDLGNPG6HXXQEJF2IjJPRNa6/2wb5LpnRWSTiHwd7Xup6IT6oHGq\nPv57Gfb/4ydmvjSeKe8+4hM03v3LXzn+kid59tChUQeNrEwX/xzRh3+O6EOOe3I5PYY9bv8J64mn\n9MaV5vv6rjRh4im9Y/J+uuJKxVKky3FjbTww3xgzWUTGu+/fFOC654DHgf8ksG6K5Pug8d7D0Kxi\nF/1fmcGo2QVkVNf2Qn5pvSe3DxrNgv0Pq/P89AA5qvwJ8PCIPjXJEb2H6f7pLg+2JNbz/EhOFRSo\nM2Ht+da/cc2XCMR8aNDOeSZKheNU4BgK5LtvPw8UEiBwGGM+FpGuiaqUqpVMHzQFRcU1H8rHfL+U\nu99/gr39EhI+c+gwHvnrWZRl1E1ImOlK57R+Obyw6KeQ72MgYEbd4pIyrpu5jGtnLgsZgAyRBai/\n7tcuaDr4wq1rWT85P+Tzo6HniatYEhPmlzwubypSYozJct8WYIvnfoBruwKzjTEHhnnNkcBIgOzs\n7H4zZsywXa/S0lJatmxp+3nJLpp2lZRVULyljGqv3480EXLaZsZs3D1Sa37bjuuPPzjqv0/T/Qvf\nhIS/9zyADy4YzR9dAickzEhPI7tNM7IyXazasI3KEKk7MtLT6NGxFWt+2055VXVM2xDofUrKKti4\ndRflVdUIgsHQqTk0adY8Ln/H3u/n/fcSb/r/qmEYOHDgUmNMXiTXxq3HISIfAB0DPDTB+447iWK9\no5cxZjowHSAvL8/k5+fbfo3CwkKieV6yi7ZdybCqiqoqCodcydiP/0Mrr4SEu1q05I6jLuL+Of8k\nc/kGnvD7Nu1KE1o2a0LJzgo6Z6UzbnB3OrUh6NkcnrTk+X1zuGj8HEzEh2P6ysnKZGd5ZdDVX+AZ\nEuvOzfNXUFaRhvdU49jcSp74sor7hvdKmUlr/X+VeuIWOIwxxwd7TEQ2ikgnY8wGEekEbIpXPVT0\nHD/L4csvYdQoJi5Z4lP8eu+BbLniAj7Z1gXS0ursX2jmSqOsorrmw9uzIuy+4bncNzy3Ju+TZ1gp\nxy8ohjuz3CPTlR506CfU4VFZzV2MfWV50CEtXe2kkp1TcxyzgAuAye4/33KoHioZbdsGt90Gjz8O\n1bVDRt+124tbT7iCz/Y5iLFtKin+qYwBkxfUfOh75ieuC7AnwvNhvHD8sWE/kAPNB/hr29xV87pg\nrcKaeEpvn9cOtMTWlS6U7qoMOw+iq51UMnMqcEwGXhGRS4Afgb8DiEhn4GljzEnu+y9jTaK3F5Ff\ngDuMMc84U2UVd8bA66/DNdfAr7/WljdtyqqLr+LyzsfxQ2kV3otW/feXTJm7JujKpuKSsoDDb1B3\nt7V3z8R/tZTnw997efDuSt85Ee9A5v3aO3ZXBtyv4U9XO6lk5kjgMMb8CRwXoPxX4CSv+2clsl7K\nQevXw5gx8M47PsWL9z+EGweOonzv/Rk3uEfA9OLeQzuhhpgE6qyWGvfacp/zLryHtTw7uyP58A82\nvOQ/3NdtfPiz0HS1k0p2TvU4lLKUl8NDD8Fdd0GZ1+T3Hh2YcNTFvP6XI0EE3B/owYaPPEM74ZbL\n+j+/oqrutf5BINIP/0iGl8LNn2Skp+kxsCrpaeBQzvnkExg9GlbWZoBFBEaPZmiHIazZ7bvru6yi\nKmhg8AzthJs7iJQnCAQa2qrPHpdg+yk8waKwsJB8DRoqyTWcg5VV6vjzT7j0UjjqKN+gcfDB8Nln\n8MQTfLs7cKqQKmNCpg7PidHcQOeszJqNgMXuzLyeYayBPTtEnb58WN8c7hueS05WJuKur/YwVEOj\nPQ6VEAVFxUx5bzX9P5nDrR89S9sdW2sfbNHCGqq6+mpoYv1KBvtW37a5i78d1AnZsR6whqZO61c7\nlDRucA+um7ksotQfEPhMb08QCJav68PVv9dMnkezx8XxZc5K1ZMGDhV3BUXFPDV9Dg/OeYz+P/vl\nqxw2DB59FLp08SkeN7gH415bXmcOYuvOCmYu/pmre1nlVcbw4qKfeGHRTzX7Mc7pvzcvLvopbPDw\nP9PbPwgEWtYL1jBWqPTljm+aVCrONHCo+Coro2TsTbz50Uy/hIQdeGzo1dz/n1sDPi1YqvFqoNov\nmHjuea+IytunXcAVWB5pwIN/P7jOIUjeIp3L8AQL/6W7TqeiVypedI5Dxc/770NuLhd++GJN0KiU\nNP512HBOuOQJXuncN+TTt0aw38FfWUUVd769suZbf7BU6JFkoorkKFbveRComx3XyVT0SsWL9jhU\n7G3YANddBzNn+hR/2bkHtwwew+o9uwHhJ7IjTf3hb8vOipp0I6FWWYVL6xHuKFbPY6F2mIPuAlep\nRwOHip2qKpg2DW65xUob4lbeqg2Tjjqf/x44CCNWJzeSVUiBlq660gRidJ5SJB/o4SayI927oVQq\n0cChYqOoCEaNgsWLfcvPPZeMBx7gkF8rmW9z0jjYN36wDjyCyA9PCiQWH+jhekW6C1ylIg0cqn62\nb4fbb7dWRnklJKR7d3jySTjuuHqtNAr2jb9w61p+mJwfdS6oWH2gB+oVeYKZf9ZdpVKFBg4VHWPg\nzTetvRfFxbXlGRnWUNVNN0GzZgFP04vlSiP/wHJrwYqQJ/3F+ljWSOZBlEo1GjiUfT/8AFddBbNn\n+5Yfdxw88QT85S81RcE20cXrvIkPV/8e8vH1k/8W8/fUDX2qsdHAoSJXUQEPPwx33gk7d9aW77mn\nlajw7LOtXFNegk0ex2ulUajXrc8xqbqxT6lauo9DRWbhQjjkEGsIyjtojBoFq1fDOefUCRoQfAI6\nmonpgqJiBkxeQLfxc1jz23YKiorrXBPqdSee0tv2e3reN1DOqkDvr1RjoIFDhbZ5M1x2GRx5JHzt\nlS4kNxc+/dRaftu2bdCnR7KJLhL+H97lVdUBP7wDvZ8A5/bfO+oeQqjhNqUaIx2qUoEZAy+8AGPH\nwu9e8wbNm1tDVddcA67wQz+xmDwuKCoOeEZ3oLmSaN8v1FBUoofblEp2GjhUXWvWwOWXw4cf+paf\ncgo89hjsvbetl6vP5LGnpxFsB3igD2+77xdu5Vd9zt9QKhXpUJWqtWuXtSfjoIN8g0aXLlBQAG+9\nVRM0vOcbBkxeELfx/nApPQIlHLRbr3BDUbEablMqVWiPQ1nmzYMrroB162rL0tOtIak774SWLWuK\nQ31Dh9juaQg1HBQs4aDdPSPhhqJ0r4ZSvjRwNHa//QbXXw8vv+xbfvjh1sR3nz41Rd7pw/2VVVQx\ncdZKdldWx3SzX7BhIkHqnJwXrOcw9pXlIesQyVCU7tVQqpYOVTVW1dVWSpCePX2DRps21ia+hQvr\nBA3v9OGBlJRVxHz1UbBhor3aZdb5IA/Wc6gyJuTyWR2KUsoe7XE0RsuWwejR8PnnvuVnnw0PPggd\nO9Z5SiTpw4Opz+qjYMNEWVvX1rk2VMJB7wAWbMhJh6KUiowGjsaktBTuuAMeecRKge6x//5WL2PQ\noKBPDffhn+lKp5krreYcDG/1XX0UaJiosLBu4AiUcNCbZ+gs2FCaBgqlIuPIUJWItBOReSKy1v1n\nnR1kItJFRD4UkW9EZKWIXONEXVNGQQEccICVGsQTNDIyrFVUK1aEDBoQ+sM/JyuT+4bncsfJvR0d\n8hnWN4f7hucGPfUvXUQ38ikVA071OMYD840xk0VkvPv+TX7XVAJjjTFfikgrYKmIzDPGfJPoyjZo\nP/7IgRMmWLu8vQ0caPUyevaM6GUCfZvPdKXXmaCGyIZ8osn95P2c8X2qKSkqrvMcz/1AdQ3WE9GN\nfErZ41TgGArku28/DxTiFziMMRuADe7b20VkFZADaOCIREWFNSR1xx20984t1aGDNY9x7rkBc0sF\nE+k8QCRDPtEsm/V/jiflSKDnBKtrsBVhupFPKXucChzZ7sAA8BuQHepiEekK9AU+D3WdcvvsM2vy\n+6uvfMsvuwwmT4Z27aJ62VjNA0STat3uc4LVNVBPRFdPKWWPmCCpHOr9wiIfAHWX58AE4HljTJbX\ntVuMMQEz5YlIS+Aj4B5jzBsh3m8kMBIgOzu734wZM2zXubS0lJZeG90amibbt7PvU0/RafZsxOvf\ndds++7Bu7Fi25eY6WLtaK4q3Bn0sN6dNRM/JzoSNZaGfU1JWwcatuyivqiYjPY3sNs0A6pTVJ916\nrDX038FAUrFNkHrtGjhw4FJjTF4k18YtcIR8U5E1QL4xZoOIdAIKjTF1vvaJiAuYDcw1xjwU6evn\n5eWZJUuW2K5XYWEh+fn5tp/nOGPgpZesjXybNtWWZ2bCxIl8dMghHHP88c7Vz8+AyQsCDhnlZGWy\ncPyxET1nbG4lD65oEvQ5/kNbEHxOJpk02N/BEFKxTZB67RKRiAOHUxsAZwEXuG9fALzlf4GICPAM\nsMpO0Gh0vv3WWhF17rm+QeP//g+++QZuvBHTJPEjkqFyRkWz4c7uczQVulLx41TgmAwMEpG1wPHu\n+4hIZxF5x33NAOA84FgRWeb+OcmZ6iahXbusHFK5uTB/fm15Tg68/jrMmgVduzpStXAHH3mWzeZk\nZSLULucN1RPwf05GelrI52gqdKXix5HJcWPMn8BxAcp/BU5y3/4E6wwe5W/+fCvt+VqvTXBpabUJ\nCVu1qtfL1/eY1EgmsqOZaPd+TmFhIfkhnq+p0JWKH81V1ZBs3GgNSR1/vG/QOPRQWLLE2twXg6BR\n32NSk+HbfrChrYE9OyQkHbxSqUwDR0NQXQ3Tp1ub9V58sba8dWuYOtVaftu3b0zeKhZzA7E8Zzxa\ngYbDTuuXw+tLi/XscKXqSXNVJbuvvrL2ZHz2mW/5iBHw8MPQqVNM3y4WvYVgu8z9J7LrOyQWjv9w\n2IDJC2zvH1FK1aWBI1nt2AETJ1rBwTsh4b77WqlCBg+Oy9vGYm4g3C7zgqJiJs5aSUlZbULEWJzd\nEU4yDKEplQo0cCSjWbPgqqvgp59qy1wuuOkmuOUWa39GnETaWwgn2OR3oP0VHna+/ZeUVTBg8gJb\nvRWdMFcqNnSOI5n8/DOceioMHeobNI45BpYvh7vvjmvQgOiWytoR7lyPSL79FxQVU7ylzGeu4tqZ\ny+h71/sh5yv0wCalYkN7HMmgshIefdRKcb5jR215+/bwwANw/vm2EhLWVzzPpggXGCL59j9l7hrO\n7FI348GWnRUhh7v0wCalYkMDh9M+/xxGjbJ6FN4uuQTuvx/22MOZetVDqEnvUKf0Rfrt/9eSMugS\n+LFww116YJNS9adDVU4pKYErroAjjvANGr16wccfw9NPN9igEWofSKDhIoC2zV0hh8S8U5ikhel9\n6WS3UvGlPY5EMwZmzIDrrrM29HlkZlpDVddfb53M10CF2zUezXCR/4R6VZjEnDrZrVR8aeBIpHXr\nrF7GvHm+5SedBI8/Dt26OVOvGIpkyavd4aJgE+oC+IcQnexWKv50qCoRdu+2VkQdeKBv0OjcGV59\nFWbPTomgAfHZNR5q6OmfI/rEbQWYUiow7XHE24cfWgkJ13il7EhLgzFjrGDSurVzdYuDWO0DgdpJ\n9mADU52zMnWyWykHaOCIl02b4IYb4L//9S3Py4Np06BfP2fqFWexWvIaaqMgQJqIDkkp5RANHLFW\nXQ3PPGPt8t6ypba8VSu4916r95Fed1VRKolFLyDURsGcrExy2lZpT0Mph+gcRyx9/TUcfTSMHOkb\nNM44A1avtoanUjxoxEqweQ0BFo4/NqnOCVeqsdEeRyzs2AF33WWdh1FZWVverZuV9vzEE52rWwNV\nn7xS8c66q1Rjpz2O+po9G3r3hn/8ozZouFxWMsKvv9agEaVo80rF4iAqpVRoGjii9csvcNppcPLJ\n8OOPteVHHQXLlsE990Dz5s7Vr4GLNtliLA6iUkqFpkNVdlVWWpv1brsNSktry/fYA6ZMgQsvTGhC\nwlQWzSS7nrmhVPxp4LDjiy+s0/iKinzLL7rIGqpq396ZeqWIWMxN6JkbSsWfDlVFYutWa0VU//6+\nQeOAA+Cjj+DZZzVo1FOs5ib0zA2l4k8DRyjGwMyZ0LOntTrKk1yvWTNrDmPZMmv5raq3WM1NxPsg\nKqWUDlUF9913cOWVMHeub/mQIVYQ2XdfZ+qVomI5N6FpSJSKL0d6HCLSTkTmicha959tA1zTTES+\nEJHlIrJSRO5MSOV274ZJk6yEhN5Bo1MneOUVeOcdDRpxEGlyRM+5HCuKtzJg8gJdZquUA5waqhoP\nzDfGdAfmu+/72w0ca4w5GOgDDBGR/vGsVJtly6BPH2vF1K5dVqGINb+xapW1A1xXTMVFJHMT3vMg\noHs0lHKKU4FjKPC8+/bzwDD/C4zFs97V5f4JfYJPtLZuhQsvpO9111mpQTwOOcRaSfXYY9CmTVze\nWlkimZvQPRpKJQen5jiyjTEb3Ld/A7IDXSQi6cBSYH9gqjHm87jUpmlT+PTT2vutWlnDVVdcAU10\nGihRws1N6B4NpZKDmDDHcEb9wiIfAB0DPDQBeN4Yk+V17RZjTJ15Dq/Hs4A3gauMMV8HuWYkMBIg\nOzu734wZM2zVN2vpUvrccAO/H300a8eMobxDB1vPT2alpaW0bNnS6WrU25rftlNeVQ1AdiZsdMeL\njPQ0enRs5WDNYidV/q28pWKbIPXaNXDgwKXGmLxIro3b12ljzPHBHhORjSLSyRizQUQ6AZvCvFaJ\niHwIDAECBg5jzHRgOkBeXp7Jz8+3V+H8fJa0bk3eZZeROiHDUlhYiO2/jyRU4nVGx9jcSh5c0YRM\nVzr3Dc8lP0VWUaXKv5W3VGwTpG67IuHUHMcs4AL37QuAt/wvEJEO7p4GIpIJDAJW+18XS6Xdu8fz\n5VU9ec+DgO7RUMopTg3gTwZeEZFLgB+BvwOISGfgaWPMSUAn4Hn3PEca8IoxZrZD9VVJwjMPUlhY\nyFXn5DtdHaUaJUcChzHmT+C4AOW/Aie5b38F9E1w1ZRSSoWhKUeUUkrZooFDKaWULRo4lFJK2aKB\nQymllC0aOJRSStmigUMppZQtGjiUUkrZooFDKaWULRo4lFJK2RK37LhOEpHfsVKZ2NUe+CPG1UkG\nqdiuVGwTpGa7UrFNkHrt2scYE1GO15QMHNESkSWRphVuSFKxXanYJkjNdqVimyB12xUJHapSSill\niwYOpZRStmjg8DXd6QrESSq2KxXbBKnZrlRsE6Ruu8LSOQ6llFK2aI9DKaWULY06cIhIOxGZJyJr\n3X+2DXBNMxH5QkSWi8hKEbnTibraEWG7uojIhyLyjbtd1zhR10hF0ib3dc+KyCYRCXg2fTIQkSEi\nskZE1onI+ACPi4g86n78KxE5xIl62hVBu3qKyGcisltEbnCijnZF0KZz3P9GK0TkUxE52Il6Jlqj\nDhzAeGC+MaY7MN99399u4FhjzMFAH2CIiPRPYB2jEUm7KoGxxpheQH/gShHplcA62hVJmwCeA4Yk\nqlJ2uY9CngqcCPQCzgrw934i0N39MxJ4MqGVjEKE7doMXA08kODqRSXCNq0HjjHG5AJ300jmPRp7\n4BgKPO++/TwwzP8CYyl133W5f5J9YiiSdm0wxnzpvr0dWAXkJKyG9oVtE4Ax5mOsD6hkdRiwzhjz\nvTGmHJiB1TZvQ4H/uH/3FgFZItIp0RW1KWy7jDGbjDGLgQonKhiFSNr0qTFmi/vuImCvBNfREY09\ncGQbYza4b/8GZAe6SETSRWQZsAmYZ4z5PFEVjFJE7fIQka5Y57snc7tstSmJ5QA/e93/hboBO5Jr\nkk1DrHM4dtt0CfBuXGuUJJo4XYF4E5EPgI4BHprgfccYY0QkYE/CGFMF9BGRLOBNETnQGOPoGHos\n2uV+nZbA68C1xphtsa2lPbFqk1KJJiIDsQLHkU7XJRFSPnAYY44P9piIbBSRTsaYDe6hgE1hXqtE\nRD7EGkN3NHDEol0i4sIKGi8aY96IU1UjFst/qyRWDHTxur+Xu8zuNcmmIdY5nIjaJCIHAU8DJxpj\n/kxQ3RzV2IeqZgEXuG9fALzlf4GIdHD3NBCRTGAQsDphNYxOJO0S4BlglTHmoQTWLVph29RALAa6\ni0g3EckAzsRqm7dZwPnu1VX9ga1ew3TJKpJ2NTRh2yQiewNvAOcZY751oI7OMMY02h9gD6wVOmuB\nD4B27vLOwDvu2wcBRcBXWL2M252ud4zadSTWJP9XwDL3z0lO170+bXLffxnYgDUB+wtwidN1D9CW\nk4Bvge+ACe6y0cBo923BWs3zHbACyHO6zjFqV0f3v8k2oMR9u7XT9a5nm54Gtnj9H1ridJ0T8aM7\nx5VSStnS2IeqlFJK2aSBQymllC0aOJRSStmigUMppZQtGjiUUkrZooFDqSiIyDARMSLSM8x1F4pI\n53q8T76IzI72+UrFgwYOpaJzFvCJ+89QLsTaa6JUytDAoZRN7vxeR2LlJjrTq/wm97kMy0Vksoic\nDuQBL4rIMhHJFJEfRKS9+/o8ESl03z7MfVZFkftchx6Jb5lSkUn5XFVKxcFQ4D1jzLci8qeI9AP2\ndJcfbozZKSLtjDGbRWQMcIMxZgmAlekloNXAUcaYShE5HrgXOC3+TVHKPg0cStl3FvCI+/YM930B\n/m2M2QlgjLF7Jkgb4HkR6Y6VCsYVo7oqFXMaOJSyQUTaAccCue7U7ulYH/SvRvgSldQOETfzKr8b\n+NAYc6r7fJTCWNRXqXjQOQ6l7Dkd+K8xZh9jTFdjTBes40O3AheJSHOoCTAA24FWXs//Aejnvu09\nFNWG2pTdF8an6krFhgYOpew5C3jTr+x1oBNWyu0l7tMib3A/9hwwzTM5DtwJPCIiS4Aqr9f4B3Cf\niBShIwEqyWl2XKWUUrZoj0MppZQtGjiUUkrZooFDKaWULRo4lFJK2aKBQymllC0aOJRSStmigUMp\npZQtGjiUUkrZ8v/+fxJYhSbCfgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11cfb9cf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot\n",
    "plt.scatter(y_te_pred, yts)\n",
    "plt.xlabel('Actual')\n",
    "plt.ylabel('Predicted')\n",
    "ymin = np.min(yts)\n",
    "ymax = np.max(yts)\n",
    "plt.plot([ymin,ymax], [ymin,ymax], 'r-', linewidth=3)\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11cfb9780>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# k-fold cross validation\n",
    "import  sklearn.model_selection \n",
    "\n",
    "nfold = 10\n",
    "kf = sklearn.model_selection.KFold(n_splits=nfold,shuffle=True)\n",
    "\n",
    "# Model orders to be tested\n",
    "dtest = np.arange(10,200,10)\n",
    "nd = len(dtest)\n",
    "\n",
    "# Loop over the folds\n",
    "RSS_ts = np.zeros((nd,nfold),dtype=np.float_)\n",
    "\n",
    "for isplit, Ind in enumerate(kf.split(xnew)):\n",
    "        \n",
    "    # Get the training data in the split\n",
    "    Itr, Its = Ind\n",
    "    xtr = X0[Itr]\n",
    "    ytr = y0[Itr]\n",
    "    xts = X0[Its]\n",
    "    yts = y0[Its]\n",
    "    \n",
    "    for it, d in enumerate(dtest):\n",
    "        xtr_2 = xtr[:,0:d]\n",
    "        xts_2 = xts[:,0:d]\n",
    "        regr = linear_model.LinearRegression()\n",
    "        regr.fit(xtr_2,ytr)\n",
    "        y_te_pred = regr.predict(xts_2)\n",
    "        RSS_ts[it,isplit] = np.mean((y_te_pred-yts)**2)/(np.std(yts)**2)\n",
    "\n",
    "RSS_mean = np.mean(RSS_ts,axis=1)\n",
    "RSS_std  = np.std(RSS_ts,axis=1) / np.sqrt(nfold-1)\n",
    "\n",
    "plt.errorbar(dtest, RSS_mean, yerr=RSS_std, fmt='-')\n",
    "plt.xlabel('d')\n",
    "plt.ylabel('Test RSS')\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The optimal model order is 100\n",
      "RSS = 0.693421\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nJfiW/XemAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11cfcaeb8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Find the minimum RSS target\n",
    "imin = np.argmin(RSS_mean)\n",
    "RSS_tgt = RSS_mean[imin] + RSS_std[imin]\n",
    "\n",
    "# Find the lowest model order below the target\n",
    "I = np.where(RSS_mean <= RSS_tgt)[0]\n",
    "iopt = I[0]\n",
    "dopt = dtest[iopt]\n",
    "\n",
    "plt.errorbar(dtest, RSS_mean, yerr=RSS_std, fmt='o-')\n",
    "\n",
    "# Plot the line at the RSS target\n",
    "plt.plot([dtest[0],dtest[imin]], [RSS_tgt, RSS_tgt], '--')\n",
    "\n",
    "# Plot the line at the optimal model order\n",
    "plt.plot([dopt,dopt], [0,1], 'g--')\n",
    "\n",
    "plt.ylim(0,1)\n",
    "plt.xlabel('d')\n",
    "plt.ylabel('Test RSS')\n",
    "plt.grid()\n",
    "\n",
    "print(\"The optimal model order is %d\" % dopt)\n",
    "print(\"RSS = %f\" % RSS_mean[iopt])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/Forita/anaconda3/lib/python3.6/site-packages/sklearn/utils/validation.py:429: DataConversionWarning: Data with input dtype uint8 was converted to float64 by the scale function.\n",
      "  warnings.warn(msg, _DataConversionWarning)\n"
     ]
    }
   ],
   "source": [
    "#LASSO regression\n",
    "from sklearn import linear_model, preprocessing\n",
    "\n",
    "X = sklearn.preprocessing.scale(X0)\n",
    "y = sklearn.preprocessing.scale(y0)\n",
    "\n",
    "nfold = 10\n",
    "kf = sklearn.model_selection.KFold(n_splits=nfold,shuffle=True)\n",
    "model = linear_model.Lasso(warm_start=True)\n",
    "\n",
    "# Regularization values to test\n",
    "nalpha = 100\n",
    "alphas = np.logspace(-5,-1,nalpha)\n",
    "RSS_ts = np.zeros((nalpha,nfold))\n",
    "\n",
    "for ifold, ind in enumerate(kf.split(X0)):\n",
    "    \n",
    "    \n",
    "    # Get the training data in the split\n",
    "    Itr,Its = ind\n",
    "    X_tr = X0[Itr]\n",
    "    y_tr = y0[Itr]\n",
    "    X_ts = X0[Its]\n",
    "    y_ts = y0[Its]\n",
    "    \n",
    "    # Compute the lasso path for the split\n",
    "    for ia, a in enumerate(alphas):\n",
    "        model.alpha = a\n",
    "        model.fit(X_tr,y_tr)\n",
    "        y_ts_pred = model.predict(X_ts)\n",
    "        RSS_ts[ia,ifold] = np.mean((y_ts_pred-y_ts)**2)/(np.std(y_ts)**2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11d2b3668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compute the mean and standard deviation over the different folds.\n",
    "RSS_mean = np.mean(RSS_ts,axis=1)\n",
    "RSS_std  = np.std(RSS_ts,axis=1) / np.sqrt(nfold-1)\n",
    "\n",
    "plt.errorbar(alphas, RSS_mean, yerr=RSS_std, fmt='-')\n",
    "plt.xlabel('alpha')\n",
    "plt.ylabel('Test RSS')\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimal alpha = 0.000010\n",
      "Mean RSS = 0.478143\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11d28f3c8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Find the minimum RSS target\n",
    "imin = np.argmin(RSS_mean)\n",
    "RSS_tgt = RSS_mean[imin] + RSS_std[imin]\n",
    "alpha_min = alphas[imin]\n",
    "\n",
    "# Find the lowest model order below the target\n",
    "I = np.where(RSS_mean <= RSS_tgt)[0]\n",
    "iopt = I[0]\n",
    "alpha_opt = alphas[iopt]\n",
    "RSS = RSS_mean[iopt]\n",
    "\n",
    "plt.errorbar(alphas, RSS_mean, yerr=RSS_std, fmt='o-')\n",
    "\n",
    "# Plot the line at the RSS target\n",
    "plt.plot([alphas[0],alpha_min], [RSS_tgt, RSS_tgt], '--')\n",
    "\n",
    "# Plot the line at the optimal model order\n",
    "plt.plot([alpha_opt,alpha_opt], [0,0.5], 'g--')\n",
    "\n",
    "plt.xlim(0,0.00006)\n",
    "plt.ylim(0.45,0.5)\n",
    "plt.xlabel('alpha')\n",
    "\n",
    "plt.ylabel('Test RSS')\n",
    "plt.grid()\n",
    "\n",
    "# Print results\n",
    "print(\"Optimal alpha = %f\" % alpha_opt)\n",
    "print(\"Mean RSS = %f\" % RSS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11d28c198>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.alpha = alpha_opt\n",
    "model.fit(X0,y0)\n",
    "y_pred = model.predict(X0)\n",
    "RSS = np.mean((y_pred-y0)**2)/(np.std(y0)**2)\n",
    "\n",
    "plt.scatter(y_pred, y0)\n",
    "plt.xlabel('Actual')\n",
    "plt.ylabel('Predicted')\n",
    "ymin = np.min(y0)\n",
    "ymax = np.max(y0)\n",
    "plt.plot([ymin,ymax], [ymin,ymax], 'r-', linewidth=3)\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
